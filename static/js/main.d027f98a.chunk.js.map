{"version":3,"sources":[" components/card/card.component.jsx"," components/card-list/card-list.jsx"," components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","handleChange","e","setState","searchInput","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAceA,EAVF,SAAAC,GACT,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAKL,EAAMG,QAAQG,OAC/F,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCIfC,G,MARE,SAAAR,GACb,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCK/CO,G,MATG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,cAAf,OACd,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCHG,G,wDAvCb,aAAc,IAAD,8BACX,gBAaFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAO1C,WAAS,IAAD,EAE0BC,KAAKN,MAA9Bd,EAFD,EAECA,SAAUW,EAFX,EAEWA,YACXU,EAAiBrB,EAASsB,QAAO,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAElG,OACE,sBAAK/B,UAAU,MAAf,UAEE,kDAEA,cAAC,EAAD,CACEW,YAAY,iBACZC,cAAgBgB,KAAKZ,eAGvB,cAAC,EAAD,CAAUR,SAAUqB,W,GAlCVI,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d027f98a.chunk.js","sourcesContent":["import React from 'react'\n\nimport './card.styles.css'\n\nconst Card = props => {\n    return(\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name} />\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport Card from '../card/card.component'\n\nimport './card-list.styles.css'\n\nconst CardList = props => {\n    return(\n        <div className=\"card-list\">\n            {props.monsters.map(monster => <Card key={monster.id} monster={monster} />)}\n        </div>\n    )\n}\n\nexport default CardList","import React from 'react'\n\nimport './search-box.styles.css'\n\nconst SearchBox = ({placeholder, changeHandler}) => (\n    <input \n        className=\"search\"\n        type=\"search\" \n        placeholder={placeholder} \n        onChange={changeHandler}\n         />\n)\n\nexport default SearchBox","import React from 'react'\nimport CardList from './ components/card-list/card-list'\nimport SearchBox from './ components/search-box/search-box'\n\nimport './App.css'\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchInput: ''\n    }    \n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = e => {\n    this.setState({searchInput: e.target.value})\n  }\n\n  render(){\n\n    const {monsters, searchInput} = this.state;\n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchInput.toLowerCase()));\n\n    return(\n      <div className=\"App\">\n\n        <h1>Monsters Rolodex</h1>\n\n        <SearchBox\n          placeholder=\"Search Monster\"\n          changeHandler= {this.handleChange}\n          />\n\n        <CardList monsters={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}